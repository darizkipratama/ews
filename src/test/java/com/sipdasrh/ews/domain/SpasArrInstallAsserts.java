package com.sipdasrh.ews.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpasArrInstallAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpasArrInstallAllPropertiesEquals(SpasArrInstall expected, SpasArrInstall actual) {
        assertSpasArrInstallAutoGeneratedPropertiesEquals(expected, actual);
        assertSpasArrInstallAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpasArrInstallAllUpdatablePropertiesEquals(SpasArrInstall expected, SpasArrInstall actual) {
        assertSpasArrInstallUpdatableFieldsEquals(expected, actual);
        assertSpasArrInstallUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpasArrInstallAutoGeneratedPropertiesEquals(SpasArrInstall expected, SpasArrInstall actual) {
        assertThat(actual)
            .as("Verify SpasArrInstall auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpasArrInstallUpdatableFieldsEquals(SpasArrInstall expected, SpasArrInstall actual) {
        assertThat(actual)
            .as("Verify SpasArrInstall relevant properties")
            .satisfies(a -> assertThat(a.getNamaInstalasi()).as("check namaInstalasi").isEqualTo(expected.getNamaInstalasi()))
            .satisfies(a -> assertThat(a.getUrlInstalasi()).as("check urlInstalasi").isEqualTo(expected.getUrlInstalasi()))
            .satisfies(a -> assertThat(a.getLatInstalasi()).as("check latInstalasi").isEqualTo(expected.getLatInstalasi()))
            .satisfies(a -> assertThat(a.getLongInstalasi()).as("check longInstalasi").isEqualTo(expected.getLongInstalasi()))
            .satisfies(a -> assertThat(a.getThresholdInstalasi()).as("check thresholdInstalasi").isEqualTo(expected.getThresholdInstalasi())
            )
            .satisfies(a -> assertThat(a.getUrlEwsGis()).as("check urlEwsGis").isEqualTo(expected.getUrlEwsGis()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpasArrInstallUpdatableRelationshipsEquals(SpasArrInstall expected, SpasArrInstall actual) {
        assertThat(actual)
            .as("Verify SpasArrInstall relationships")
            .satisfies(a -> assertThat(a.getSpas()).as("check spas").isEqualTo(expected.getSpas()));
    }
}
